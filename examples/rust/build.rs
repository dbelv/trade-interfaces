use std::{env, fs};
use std::path::PathBuf;
use prost::Message;

// generated by `sqlx migrate build-script`
fn main() -> Result<(), Box<dyn std::error::Error>> {
    // Compile the proto files with ProtoX
    let file_descriptors = protox::compile(
        [
            "../../proto/valorem/trade/v1/rfq.proto",
            "../../proto/valorem/trade/v1/auth.proto",
        ],
        &["../../proto/valorem/trade/v1/"],
    )
    .unwrap();

    // Get the path to the output directory for the file descriptor set
    let file_descriptor_path =
        PathBuf::from(env::var("OUT_DIR").unwrap()).join("valorem_interfaces.bin");

    // Write the file descriptor set to the output directory
    fs::write(&file_descriptor_path, file_descriptors.encode_to_vec()).unwrap();

    // Tonic codegen.  Skip the protoc run here since we compiled the proto files with ProtoX earlier
    dbg!(tonic_build::configure()
        .build_server(true))
        .file_descriptor_set_path(file_descriptor_path)
        .skip_protoc_run()
        .compile(
            &[
                "../../proto/valorem/trade/v1/rfq.proto",
                "../../proto/valorem/trade/v1/auth.proto",
            ],
            &["../../proto/valorem/trade/v1/"], // specify the root location to search proto dependencies
        )
        .unwrap();
    // trigger recompilation when a new migration is added
    println!("cargo:rerun-if-changed=migrations");
    Ok(())
}
